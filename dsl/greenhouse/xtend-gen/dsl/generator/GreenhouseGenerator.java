/**
 * generated by Xtext 2.25.0
 */
package dsl.generator;

import com.google.common.collect.Iterators;
import dsl.greenhouse.Controller;
import dsl.greenhouse.HardwareSetup;
import dsl.greenhouse.Model;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GreenhouseGenerator extends AbstractGenerator {
  private ControllerGenerator controllerGenerator = new ControllerGenerator();
  
  private PeripheralGenerator peripheralGenerator = new PeripheralGenerator();
  
  private VerificationGenerator verificationGenerator = new VerificationGenerator();
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final Model model = Iterators.<Model>filter(resource.getAllContents(), Model.class).next();
    EList<HardwareSetup> _hardwareSetup = model.getHardwareSetup();
    for (final HardwareSetup hardware : _hardwareSetup) {
      EList<Controller> _controllers = hardware.getControllers();
      for (final Controller controller : _controllers) {
        String _name = controller.getName();
        String _plus = ("peripheral/" + _name);
        String _plus_1 = (_plus + "/");
        String _name_1 = controller.getName();
        String _plus_2 = (_plus_1 + _name_1);
        String _plus_3 = (_plus_2 + ".ino");
        fsa.generateFile(_plus_3, this.peripheralGenerator.compilePeripheral(model, controller));
      }
    }
    String _name_2 = model.getName();
    String _plus_4 = ("controller/" + _name_2);
    String _plus_5 = (_plus_4 + ".py");
    fsa.generateFile(_plus_5, this.controllerGenerator.compileController(model));
    String _name_3 = model.getName();
    String _plus_6 = ("verification/" + _name_3);
    String _plus_7 = (_plus_6 + ".xta");
    fsa.generateFile(_plus_7, this.verificationGenerator.compileVerification(model));
  }
}
