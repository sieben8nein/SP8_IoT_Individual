/*
 * generated by Xtext 2.25.0
 */
grammar InternalGreenhouse;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dsl.services.GreenhouseGrammarAccess;

}

@parser::members {

 	private GreenhouseGrammarAccess grammarAccess;

    public InternalGreenhouseParser(TokenStream input, GreenhouseGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GreenhouseGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getHardwareSetupHardwareSetupParserRuleCall_2_0());
				}
				lv_hardwareSetup_2_0=ruleHardwareSetup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"hardwareSetup",
						lv_hardwareSetup_2_0,
						"dsl.Greenhouse.HardwareSetup");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGreenhousesGreenhouseParserRuleCall_3_0());
				}
				lv_greenhouses_3_0=ruleGreenhouse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"greenhouses",
						lv_greenhouses_3_0,
						"dsl.Greenhouse.Greenhouse");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleHardwareSetup
entryRuleHardwareSetup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHardwareSetupRule()); }
	iv_ruleHardwareSetup=ruleHardwareSetup
	{ $current=$iv_ruleHardwareSetup.current; }
	EOF;

// Rule HardwareSetup
ruleHardwareSetup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHardwareSetupAccess().getHardwareSetupAction_0(),
					$current);
			}
		)
		otherlv_1='hardware'
		{
			newLeafNode(otherlv_1, grammarAccess.getHardwareSetupAccess().getHardwareKeyword_1());
		}
		otherlv_2='types'
		{
			newLeafNode(otherlv_2, grammarAccess.getHardwareSetupAccess().getTypesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHardwareSetupAccess().getHardwareHardwareParserRuleCall_3_0());
				}
				lv_hardware_3_0=ruleHardware
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHardwareSetupRule());
					}
					add(
						$current,
						"hardware",
						lv_hardware_3_0,
						"dsl.Greenhouse.Hardware");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='micro-controllers'
		{
			newLeafNode(otherlv_4, grammarAccess.getHardwareSetupAccess().getMicroControllersKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHardwareSetupAccess().getControllersControllerParserRuleCall_5_0());
				}
				lv_controllers_5_0=ruleController
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHardwareSetupRule());
					}
					add(
						$current,
						"controllers",
						lv_controllers_5_0,
						"dsl.Greenhouse.Controller");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleHardware
entryRuleHardware returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHardwareRule()); }
	iv_ruleHardware=ruleHardware
	{ $current=$iv_ruleHardware.current; }
	EOF;

// Rule Hardware
ruleHardware returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getHardwareAccess().getSettingActuatorParserRuleCall_0());
		}
		this_SettingActuator_0=ruleSettingActuator
		{
			$current = $this_SettingActuator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHardwareAccess().getSettingSensorParserRuleCall_1());
		}
		this_SettingSensor_1=ruleSettingSensor
		{
			$current = $this_SettingSensor_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSettingActuator
entryRuleSettingActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingActuatorRule()); }
	iv_ruleSettingActuator=ruleSettingActuator
	{ $current=$iv_ruleSettingActuator.current; }
	EOF;

// Rule SettingActuator
ruleSettingActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='has'
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingActuatorAccess().getHasKeyword_2());
		}
		otherlv_3='action'
		{
			newLeafNode(otherlv_3, grammarAccess.getSettingActuatorAccess().getActionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingActuatorAccess().getSettingActionSettingActionParserRuleCall_4_0());
				}
				lv_settingAction_4_0=ruleSettingAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingActuatorRule());
					}
					add(
						$current,
						"settingAction",
						lv_settingAction_4_0,
						"dsl.Greenhouse.SettingAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSettingActuatorAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSettingActuatorAccess().getSettingActionSettingActionParserRuleCall_5_1_0());
					}
					lv_settingAction_6_0=ruleSettingAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSettingActuatorRule());
						}
						add(
							$current,
							"settingAction",
							lv_settingAction_6_0,
							"dsl.Greenhouse.SettingAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSettingSensor
entryRuleSettingSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingSensorRule()); }
	iv_ruleSettingSensor=ruleSettingSensor
	{ $current=$iv_ruleSettingSensor.current; }
	EOF;

// Rule SettingSensor
ruleSettingSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='publishes'
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingSensorAccess().getPublishesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingSensorAccess().getReducerReducerParserRuleCall_3_0());
				}
				lv_reducer_3_0=ruleReducer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingSensorRule());
					}
					set(
						$current,
						"reducer",
						lv_reducer_3_0,
						"dsl.Greenhouse.Reducer");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingSensorAccess().getFrequencyFrequencyParserRuleCall_4_0());
				}
				lv_frequency_4_0=ruleFrequency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingSensorRule());
					}
					set(
						$current,
						"frequency",
						lv_frequency_4_0,
						"dsl.Greenhouse.Frequency");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='controller'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getControllerAccess().getOfKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getControllerAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getTypeControllerTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleControllerType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"dsl.Greenhouse.ControllerType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='and'
		{
			newLeafNode(otherlv_5, grammarAccess.getControllerAccess().getAndKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getHeartBeatHeartbeatParserRuleCall_6_0());
				}
				lv_heartBeat_6_0=ruleHeartbeat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					set(
						$current,
						"heartBeat",
						lv_heartBeat_6_0,
						"dsl.Greenhouse.Heartbeat");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleHeartbeat
entryRuleHeartbeat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeartbeatRule()); }
	iv_ruleHeartbeat=ruleHeartbeat
	{ $current=$iv_ruleHeartbeat.current; }
	EOF;

// Rule Heartbeat
ruleHeartbeat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sends'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeartbeatAccess().getSendsKeyword_0());
		}
		otherlv_1='heartbeat'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeartbeatAccess().getHeartbeatKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeartbeatAccess().getFreqFrequencyParserRuleCall_2_0());
				}
				lv_freq_2_0=ruleFrequency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeartbeatRule());
					}
					set(
						$current,
						"freq",
						lv_freq_2_0,
						"dsl.Greenhouse.Frequency");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleControllerType
entryRuleControllerType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerTypeRule()); }
	iv_ruleControllerType=ruleControllerType
	{ $current=$iv_ruleControllerType.current; }
	EOF;

// Rule ControllerType
ruleControllerType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='ESP32'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getControllerTypeAccess().getNameESP32Keyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='ESP8266'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getControllerTypeAccess().getNameESP8266Keyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleReducer
entryRuleReducer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReducerRule()); }
	iv_ruleReducer=ruleReducer
	{ $current=$iv_ruleReducer.current; }
	EOF;

// Rule Reducer
ruleReducer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='average'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getReducerAccess().getNameAverageKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReducerRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='median'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getReducerAccess().getNameMedianKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReducerRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleFrequency
entryRuleFrequency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrequencyRule()); }
	iv_ruleFrequency=ruleFrequency
	{ $current=$iv_ruleFrequency.current; }
	EOF;

// Rule Frequency
ruleFrequency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFrequencyAccess().getFreqExpParserRuleCall_0_0());
				}
				lv_freq_0_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFrequencyRule());
					}
					set(
						$current,
						"freq",
						lv_freq_0_0,
						"dsl.Greenhouse.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='times'
		{
			newLeafNode(otherlv_1, grammarAccess.getFrequencyAccess().getTimesKeyword_1());
		}
		otherlv_2='per'
		{
			newLeafNode(otherlv_2, grammarAccess.getFrequencyAccess().getPerKeyword_2());
		}
		(
			(
				(
					lv_unit_3_1='second'
					{
						newLeafNode(lv_unit_3_1, grammarAccess.getFrequencyAccess().getUnitSecondKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_1, null);
					}
					    |
					lv_unit_3_2='minute'
					{
						newLeafNode(lv_unit_3_2, grammarAccess.getFrequencyAccess().getUnitMinuteKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_2, null);
					}
					    |
					lv_unit_3_3='hour'
					{
						newLeafNode(lv_unit_3_3, grammarAccess.getFrequencyAccess().getUnitHourKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_3, null);
					}
					    |
					lv_unit_3_4='day'
					{
						newLeafNode(lv_unit_3_4, grammarAccess.getFrequencyAccess().getUnitDayKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_4, null);
					}
					    |
					lv_unit_3_5='week'
					{
						newLeafNode(lv_unit_3_5, grammarAccess.getFrequencyAccess().getUnitWeekKeyword_3_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_5, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSettingAction
entryRuleSettingAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingActionRule()); }
	iv_ruleSettingAction=ruleSettingAction
	{ $current=$iv_ruleSettingAction.current; }
	EOF;

// Rule SettingAction
ruleSettingAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSettingActionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSettingActionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleGreenhouse
entryRuleGreenhouse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseRule()); }
	iv_ruleGreenhouse=ruleGreenhouse
	{ $current=$iv_ruleGreenhouse.current; }
	EOF;

// Rule Greenhouse
ruleGreenhouse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='greenhouse'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseAccess().getGreenhouseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGreenhouseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseAccess().getRowRowParserRuleCall_2_0());
				}
				lv_row_2_0=ruleRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseRule());
					}
					add(
						$current,
						"row",
						lv_row_2_0,
						"dsl.Greenhouse.Row");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseAccess().getElementsGreenhouseElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleGreenhouseElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"dsl.Greenhouse.GreenhouseElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='includes'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowAccess().getIncludesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getElementsRowElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleRowElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"dsl.Greenhouse.RowElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGreenhouseElement
entryRuleGreenhouseElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseElementRule()); }
	iv_ruleGreenhouseElement=ruleGreenhouseElement
	{ $current=$iv_ruleGreenhouseElement.current; }
	EOF;

// Rule GreenhouseElement
ruleGreenhouseElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseSensorParserRuleCall_0());
		}
		this_GreenhouseSensor_0=ruleGreenhouseSensor
		{
			$current = $this_GreenhouseSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseActuatorParserRuleCall_1());
		}
		this_GreenhouseActuator_1=ruleGreenhouseActuator
		{
			$current = $this_GreenhouseActuator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseRuleSetParserRuleCall_2());
		}
		this_GreenhouseRuleSet_2=ruleGreenhouseRuleSet
		{
			$current = $this_GreenhouseRuleSet_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRowElement
entryRuleRowElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowElementRule()); }
	iv_ruleRowElement=ruleRowElement
	{ $current=$iv_ruleRowElement.current; }
	EOF;

// Rule RowElement
ruleRowElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowSensorParserRuleCall_0());
		}
		this_RowSensor_0=ruleRowSensor
		{
			$current = $this_RowSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowActuatorParserRuleCall_1());
		}
		this_RowActuator_1=ruleRowActuator
		{
			$current = $this_RowActuator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowRuleSetParserRuleCall_2());
		}
		this_RowRuleSet_2=ruleRowRuleSet
		{
			$current = $this_RowRuleSet_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGreenhouseActuator
entryRuleGreenhouseActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseActuatorRule()); }
	iv_ruleGreenhouseActuator=ruleGreenhouseActuator
	{ $current=$iv_ruleGreenhouseActuator.current; }
	EOF;

// Rule GreenhouseActuator
ruleGreenhouseActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseActuatorAccess().getGlobalKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseActuatorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGreenhouseActuatorAccess().getTypeSettingActuatorCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGreenhouseActuatorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getGreenhouseActuatorAccess().getOnKeyword_3());
		}
		otherlv_4='controller'
		{
			newLeafNode(otherlv_4, grammarAccess.getGreenhouseActuatorAccess().getControllerKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseActuatorRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getGreenhouseActuatorAccess().getControllerControllerCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6='will'
			{
				newLeafNode(otherlv_6, grammarAccess.getGreenhouseActuatorAccess().getWillKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_6_1_0());
					}
					lv_action_7_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_7_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getGreenhouseActuatorAccess().getCommaKeyword_7_0());
			}
			otherlv_9='will'
			{
				newLeafNode(otherlv_9, grammarAccess.getGreenhouseActuatorAccess().getWillKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_7_2_0());
					}
					lv_action_10_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_10_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='and'
		{
			newLeafNode(otherlv_11, grammarAccess.getGreenhouseActuatorAccess().getAndKeyword_8());
		}
		otherlv_12='has'
		{
			newLeafNode(otherlv_12, grammarAccess.getGreenhouseActuatorAccess().getHasKeyword_9());
		}
		otherlv_13='safe'
		{
			newLeafNode(otherlv_13, grammarAccess.getGreenhouseActuatorAccess().getSafeKeyword_10());
		}
		otherlv_14='state'
		{
			newLeafNode(otherlv_14, grammarAccess.getGreenhouseActuatorAccess().getStateKeyword_11());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseActuatorRule());
					}
				}
				otherlv_15=RULE_ID
				{
					newLeafNode(otherlv_15, grammarAccess.getGreenhouseActuatorAccess().getSafeStateSettingActionCrossReference_12_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRowActuator
entryRuleRowActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowActuatorRule()); }
	iv_ruleRowActuator=ruleRowActuator
	{ $current=$iv_ruleRowActuator.current; }
	EOF;

// Rule RowActuator
ruleRowActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowActuatorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRowActuatorAccess().getTypeSettingActuatorCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowActuatorAccess().getOnKeyword_2());
		}
		otherlv_3='controller'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowActuatorAccess().getControllerKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowActuatorRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getRowActuatorAccess().getControllerControllerCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5='will'
			{
				newLeafNode(otherlv_5, grammarAccess.getRowActuatorAccess().getWillKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowActuatorAccess().getActionActionParserRuleCall_5_1_0());
					}
					lv_action_6_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_6_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getRowActuatorAccess().getCommaKeyword_6_0());
			}
			otherlv_8='will'
			{
				newLeafNode(otherlv_8, grammarAccess.getRowActuatorAccess().getWillKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowActuatorAccess().getActionActionParserRuleCall_6_2_0());
					}
					lv_action_9_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_9_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='and'
		{
			newLeafNode(otherlv_10, grammarAccess.getRowActuatorAccess().getAndKeyword_7());
		}
		otherlv_11='has'
		{
			newLeafNode(otherlv_11, grammarAccess.getRowActuatorAccess().getHasKeyword_8());
		}
		otherlv_12='safe'
		{
			newLeafNode(otherlv_12, grammarAccess.getRowActuatorAccess().getSafeKeyword_9());
		}
		otherlv_13='state'
		{
			newLeafNode(otherlv_13, grammarAccess.getRowActuatorAccess().getStateKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowActuatorRule());
					}
				}
				otherlv_14=RULE_ID
				{
					newLeafNode(otherlv_14, grammarAccess.getRowActuatorAccess().getSafeStateSettingActionCrossReference_11_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGreenhouseSensor
entryRuleGreenhouseSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseSensorRule()); }
	iv_ruleGreenhouseSensor=ruleGreenhouseSensor
	{ $current=$iv_ruleGreenhouseSensor.current; }
	EOF;

// Rule GreenhouseSensor
ruleGreenhouseSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseSensorAccess().getGlobalKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseSensorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGreenhouseSensorAccess().getTypeSettingSensorCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGreenhouseSensorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getGreenhouseSensorAccess().getOnKeyword_3());
		}
		otherlv_4='controller'
		{
			newLeafNode(otherlv_4, grammarAccess.getGreenhouseSensorAccess().getControllerKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseSensorRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getGreenhouseSensorAccess().getControllerControllerCrossReference_5_0());
				}
			)
		)
		otherlv_6='has'
		{
			newLeafNode(otherlv_6, grammarAccess.getGreenhouseSensorAccess().getHasKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getVariableVariableParserRuleCall_7_0());
				}
				lv_variable_7_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
					}
					set(
						$current,
						"variable",
						lv_variable_7_0,
						"dsl.Greenhouse.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='and'
		{
			newLeafNode(otherlv_8, grammarAccess.getGreenhouseSensorAccess().getAndKeyword_8());
		}
		otherlv_9='states'
		{
			newLeafNode(otherlv_9, grammarAccess.getGreenhouseSensorAccess().getStatesKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_10_0());
				}
				lv_states_10_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
					}
					add(
						$current,
						"states",
						lv_states_10_0,
						"dsl.Greenhouse.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getGreenhouseSensorAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_11_1_0());
					}
					lv_states_12_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
						}
						add(
							$current,
							"states",
							lv_states_12_0,
							"dsl.Greenhouse.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRowSensor
entryRuleRowSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowSensorRule()); }
	iv_ruleRowSensor=ruleRowSensor
	{ $current=$iv_ruleRowSensor.current; }
	EOF;

// Rule RowSensor
ruleRowSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowSensorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRowSensorAccess().getTypeSettingSensorCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowSensorAccess().getOnKeyword_2());
		}
		otherlv_3='controller'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowSensorAccess().getControllerKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowSensorRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getRowSensorAccess().getControllerControllerCrossReference_4_0());
				}
			)
		)
		otherlv_5='has'
		{
			newLeafNode(otherlv_5, grammarAccess.getRowSensorAccess().getHasKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowSensorAccess().getVariableVariableParserRuleCall_6_0());
				}
				lv_variable_6_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowSensorRule());
					}
					set(
						$current,
						"variable",
						lv_variable_6_0,
						"dsl.Greenhouse.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='and'
		{
			newLeafNode(otherlv_7, grammarAccess.getRowSensorAccess().getAndKeyword_7());
		}
		otherlv_8='states'
		{
			newLeafNode(otherlv_8, grammarAccess.getRowSensorAccess().getStatesKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowSensorAccess().getStatesStateParserRuleCall_9_0());
				}
				lv_states_9_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowSensorRule());
					}
					add(
						$current,
						"states",
						lv_states_9_0,
						"dsl.Greenhouse.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getRowSensorAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowSensorAccess().getStatesStateParserRuleCall_10_1_0());
					}
					lv_states_11_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowSensorRule());
						}
						add(
							$current,
							"states",
							lv_states_11_0,
							"dsl.Greenhouse.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getWhenKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getStateAccess().getVariableVariableCrossReference_2_0());
				}
			)
		)
		(
			(
				(
					lv_op_3_1='<'
					{
						newLeafNode(lv_op_3_1, grammarAccess.getStateAccess().getOpLessThanSignKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_1, null);
					}
					    |
					lv_op_3_2='>'
					{
						newLeafNode(lv_op_3_2, grammarAccess.getStateAccess().getOpGreaterThanSignKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_2, null);
					}
					    |
					lv_op_3_3='='
					{
						newLeafNode(lv_op_3_3, grammarAccess.getStateAccess().getOpEqualsSignKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getThresholdExpParserRuleCall_4_0());
				}
				lv_threshold_4_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"threshold",
						lv_threshold_4_0,
						"dsl.Greenhouse.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getActionAccess().getValueSettingActionCrossReference_0_0());
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getWhenKeyword_1());
		}
		otherlv_2='receiving'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getReceivingKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getTriggerTriggerParserRuleCall_3_0());
				}
				lv_trigger_3_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_3_0,
						"dsl.Greenhouse.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTriggerAccess().getTriggerAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRowRuleSet
entryRuleRowRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRuleSetRule()); }
	iv_ruleRowRuleSet=ruleRowRuleSet
	{ $current=$iv_ruleRowRuleSet.current; }
	EOF;

// Rule RowRuleSet
ruleRowRuleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowRuleSetAccess().getRuleKeyword_0());
		}
		otherlv_1='on'
		{
			newLeafNode(otherlv_1, grammarAccess.getRowRuleSetAccess().getOnKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getRowRuleSetAccess().getActuatorRowActuatorCrossReference_2_0());
				}
			)
		)
		otherlv_3='trigger'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowRuleSetAccess().getTriggerKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getRowRuleSetAccess().getTriggerTriggerCrossReference_4_0());
				}
			)
		)
		otherlv_5='when'
		{
			newLeafNode(otherlv_5, grammarAccess.getRowRuleSetAccess().getWhenKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getRowRuleSetAccess().getSensorRowSensorCrossReference_6_0());
				}
			)
		)
		otherlv_7='is'
		{
			newLeafNode(otherlv_7, grammarAccess.getRowRuleSetAccess().getIsKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getRowRuleSetAccess().getStateStateCrossReference_8_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGreenhouseRuleSet
entryRuleGreenhouseRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseRuleSetRule()); }
	iv_ruleGreenhouseRuleSet=ruleGreenhouseRuleSet
	{ $current=$iv_ruleGreenhouseRuleSet.current; }
	EOF;

// Rule GreenhouseRuleSet
ruleGreenhouseRuleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseRuleSetAccess().getGlobalKeyword_0());
		}
		otherlv_1='rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreenhouseRuleSetAccess().getRuleKeyword_1());
		}
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getGreenhouseRuleSetAccess().getOnKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGreenhouseRuleSetAccess().getActuatorGreenhouseActuatorCrossReference_3_0());
				}
			)
		)
		otherlv_4='trigger'
		{
			newLeafNode(otherlv_4, grammarAccess.getGreenhouseRuleSetAccess().getTriggerKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getGreenhouseRuleSetAccess().getTriggerTriggerCrossReference_5_0());
				}
			)
		)
		otherlv_6='when'
		{
			newLeafNode(otherlv_6, grammarAccess.getGreenhouseRuleSetAccess().getWhenKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getGreenhouseRuleSetAccess().getSensorGreenhouseSensorCrossReference_7_0());
				}
			)
		)
		otherlv_8='is'
		{
			newLeafNode(otherlv_8, grammarAccess.getGreenhouseRuleSetAccess().getIsKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getGreenhouseRuleSetAccess().getStateStateCrossReference_9_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dsl.Greenhouse.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dsl.Greenhouse.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getMathNumberAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpParserRuleCall_1_1());
			}
			this_Exp_3=ruleExp
			{
				$current = $this_Exp_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
